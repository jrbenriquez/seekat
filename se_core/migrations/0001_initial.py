# Generated by Django 3.1.4 on 2021-01-01 07:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(max_length=1024, verbose_name='Address Line 2')),
                ('zip_code', models.CharField(max_length=12, verbose_name='Zip/Postal Code')),
                ('city', models.CharField(max_length=1024, verbose_name='City')),
                ('state', models.CharField(max_length=1024, verbose_name='State/Province')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('lon', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='se_core.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seekat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMediaMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('FB', 'Facebook'), ('TW', 'Twitter'), ('IG', 'Instagram'), ('YT', 'YouTube'), ('TWCH', 'Twitch'), ('DS', 'Discord')], max_length=4)),
                ('link', models.URLField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SeekatAddress',
            fields=[
                ('addressmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='se_core.addressmixin')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('se_core.addressmixin',),
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seeker', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeekatUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seekat_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeekatGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('members', models.ManyToManyField(related_name='seekat_groups', to='se_core.SeekatUser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('upvote_count', models.IntegerField(default=0)),
                ('downvote_count', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seeks', to='se_core.category')),
                ('seekat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seeks', to='se_core.seekat')),
                ('seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seeks', to='se_core.seeker')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeekerSocialMediaLink',
            fields=[
                ('socialmediamixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='se_core.socialmediamixin')),
                ('seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media_links', to='se_core.seeker')),
            ],
            bases=('se_core.socialmediamixin',),
        ),
        migrations.CreateModel(
            name='SeekatSocialMediaLink',
            fields=[
                ('socialmediamixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='se_core.socialmediamixin')),
                ('seekat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media_links', to='se_core.seekat')),
            ],
            bases=('se_core.socialmediamixin',),
        ),
        migrations.AddField(
            model_name='seekat',
            name='address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seekats', to='se_core.seekataddress'),
        ),
    ]
